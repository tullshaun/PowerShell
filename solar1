The error indicates that the script is attempting to connect to a remote server using PowerShell remoting, but the destination server is not in the TrustedHosts list, and an IP address is being used instead of a hostname. By default, WinRM does not allow connections to IP addresses without explicitly trusting them. Here’s how to resolve this issue:



1. Add the IP Address to the TrustedHosts List



Run the following command in PowerShell on the server where the script is being executed:



Set-Item -Path WSMan:\localhost\Client\TrustedHosts -Value "172.22.123.54" -Force



• If you need to add multiple IPs, separate them with commas:



Set-Item -Path WSMan:\localhost\Client\TrustedHosts -Value "172.22.123.54,172.22.123.55" -Force





• To allow all IPs (not recommended for security reasons):



Set-Item -Path WSMan:\localhost\Client\TrustedHosts -Value "*" -Force



2. Enable WinRM (If Not Already Enabled)



Ensure WinRM is enabled on both the local and remote servers:

1. Run this command on both machines:



Enable-PSRemoting -Force



3. Use Explicit Credentials



The error mentions “explicit credentials.” Use a credential object in your script for authentication:



$credential = Get-Credential

Enter-PSSession -ComputerName 172.22.123.54 -Credential $credential



In SolarWinds, modify the script to include the credentials explicitly.



4. Switch to a Hostname Instead of an IP Address



If possible, use the hostname of the server instead of the IP




How to Roll Back the Change
You can reset or remove the value from the TrustedHosts setting. Here are a few approaches:

1. Reset TrustedHosts to Default (Empty)
If you want to completely clear the TrustedHosts list:

powershell
Copy code
Set-Item -Path WSMan:\localhost\Client\TrustedHosts -Value "" -Force
This removes all entries from the TrustedHosts list.
The server will no longer trust any hosts for unencrypted or NTLM-based WinRM connections.
2. Restore Previous Values
If you overwrote a previously configured list of trusted hosts and need to restore them:

Check the current value of TrustedHosts on the wrong server (to confirm what’s set):

powershell
Copy code
Get-Item -Path WSMan:\localhost\Client\TrustedHosts
If the current value contains only "172.22.123.54", you can manually re-add the correct entries, if known, using:

powershell
Copy code
Set-Item -Path WSMan:\localhost\Client\TrustedHosts -Value "previousHost1,previousHost2" -Force
If you're unsure of the previous values, consult documentation or team members to confirm what should have been in the TrustedHosts list.

3. Allow Wildcard (Optional)
If you're in an environment where any host is trusted (not recommended for security reasons):

powershell
Copy code
Set-Item -Path WSMan:\localhost\Client\TrustedHosts -Value "*" -Force
This restores trust to all hosts but should only be used in low-security environments.

How to Verify the Rollback
After making the change, verify the TrustedHosts value:

powershell
Copy code
Get-Item -Path WSMan:\localhost\Client\TrustedHosts
If the output is blank (""), no hosts are trusted, which is the default.
If it contains your intended entries, the rollback or modification was successful.
Preventing Future Mistakes
Double-Check the Target Server:

Before running commands, ensure you're on the correct server by using:
powershell
Copy code
hostname
Document Current Settings:

Before modifying critical configurations like TrustedHosts, always retrieve and document the current settings:
powershell
Copy code
Get-Item -Path WSMan:\localhost\Client\TrustedHosts
Use Automation for Large Environments:

To avoid manual mistakes, use scripts with targeting logic to ensure commands are run only on the correct servers.
Conclusion
If you ran the Set-Item command on the wrong server:

It’s unlikely to cause a significant issue, but it might introduce unnecessary trust for 172.22.123.54.
To fix it, reset the TrustedHosts list using:
powershell
Copy code
Set-Item -Path WSMan:\localhost\Client\TrustedHosts -Value "" -Force
Verify the configuration with Get-Item and restore any previous trusted hosts as needed.

