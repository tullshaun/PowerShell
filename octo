# Step 1: Create a folder in "d:\temp" called Octopus
$targetFolderPath = "D:\temp\Octopus"
if (-Not (Test-Path -Path $targetFolderPath)) {
    New-Item -Path $targetFolderPath -ItemType Directory | Out-Null
    Write-Output "Step 1: Created folder: $targetFolderPath"
} else {
    Write-Output "Step 1: Folder already exists: $targetFolderPath"
}

# Step 2: Search for the latest "Octopus.<version>.msi" file in "\\apps\dev\"
$searchPath = "\\apps\dev\"
$latestMsi = Get-ChildItem -Path $searchPath -Filter "Octopus.*.msi" | Sort-Object LastWriteTime -Descending | Select-Object -First 1

if ($latestMsi) {
    Write-Output "Step 2: Found latest MSI file: $($latestMsi.Name)"

    # Step 3: Copy the latest MSI file to "d:\temp\Octopus"
    $destinationPath = Join-Path -Path $targetFolderPath -ChildPath $latestMsi.Name
    Copy-Item -Path $latestMsi.FullName -Destination $destinationPath -Force
    Write-Output "Step 3: Copied MSI file to: $destinationPath"

    # Define the path to the copied MSI installer
    $msiPath = $destinationPath

    # Define the arguments for the MSI installation
    $arguments = "/i `"$msiPath`" /quiet RUNMANAGERONEXIT=no"

    # Start the MSI installation process
    Start-Process -FilePath "msiexec.exe" -ArgumentList $arguments -Wait -NoNewWindow
    Write-Output "Step 4: Started MSI installation"

    # Check the exit code of the installation process
    if ($LASTEXITCODE -eq 0) {
        Write-Output "Installation completed successfully."

        # Define the installation location and instance details
        $installLocation = "C:\Program Files\Octopus Deploy\Octopus"
        $instanceName = "MyInstance"
        $configPath = "C:\Octopus\MyInstance\OctopusServer.config"
        $serverNodeName = "MyMachine"
        $connectionString = "Server=myServerAddress;Database=myDataBase;User Id=myUsername;Password=myPassword;"
        $adminUsername = "admin"
        $adminEmail = "admin@example.com"
        $adminPassword = "AdminPassword123!"
        $licenseBase64 = "YourVeryLongLicenseString"
        $webListenPrefixes = "http://*:8080/"
        $commsListenPort = "10943"

        # Run the setup commands
        & "$installLocation\Octopus.Server.exe" create-instance --instance $instanceName --config $configPath --serverNodeName $serverNodeName
        Write-Output "Step 5: Created Octopus instance"

        & "$installLocation\Octopus.Server.exe" database --instance $instanceName --connectionString $connectionString --create
        Write-Output "Step 6: Configured database"

        & "$installLocation\Octopus.Server.exe" configure --instance $instanceName --upgradeCheck "True" --upgradeCheckWithStatistics "True" --usernamePasswordIsEnabled "True" --webForceSSL "False" --webListenPrefixes $webListenPrefixes --commsListenPort $commsListenPort
        Write-Output "Step 7: Configured Octopus settings"

        & "$installLocation\Octopus.Server.exe" service --instance $instanceName --stop
        Write-Output "Step 8: Stopped Octopus service"

        & "$installLocation\Octopus.Server.exe" admin --instance $instanceName --username $adminUsername --email $adminEmail --password $adminPassword
        Write-Output "Step 9: Created admin user"

        & "$installLocation\Octopus.Server.exe" license --instance $instanceName --licenseBase64 $licenseBase64
        Write-Output "Step 10: Applied license"

        & "$installLocation\Octopus.Server.exe" service --instance $instanceName --install --reconfigure --start --dependOn "MSSQLSERVER"
        Write-Output "Step 11: Installed and started Octopus service"

        Write-Output "Octopus Deploy instance setup completed successfully."
    } else {
        Write-Output "Installation failed with exit code $LASTEXITCODE."
    }
} else {
    Write-Output "Step 2: No MSI files found in $searchPath"
}



I hope this message finds you well. I am writing to express my extreme dissatisfaction with the handling of my support case (#01731849). Despite multiple attempts to seek clarification on the specific Java versions and updates required for running SolarWinds SAM 2024.1.1, my queries remain unanswered. Instead, I have been repeatedly redirected to outdated forums and irrelevant articles, which is not acceptable given the critical nature of my inquiry regarding Java licensing.

To reiterate, I need precise information about the Java programming language versions and updates required for SolarWinds, particularly for components involving .jar files like JMX.Bridge.jar. This information is crucial due to licensing changes that directly impact our compliance and operational continuity.

Additionally, the first response I received incorrectly addressed JavaScript requirements instead of Java, indicating a misunderstanding of my query. This only added to the confusion and frustration.

The responses I have received so far have been inadequate and frustrating. I urge you to escalate this issue to a senior technical support representative or a manager who can provide the accurate information required.

Your prompt attention to this matter would be greatly appreciated. I look forward to a satisfactory resolution at the earliest.




