# List of server names
$serverNames = @(
    "server1.domain.com",
    "server2.domain.com",
    "server3.domain.com"
    # Add more server names as needed
)

# Initialize an array to store the results
$results = @()

# Loop through each server name
foreach ($server in $serverNames) {
    # Create an object to store the result for the current server
    $result = [PSCustomObject]@{
        ServerName = $server
        PingStatus = "Not Checked"
        DNSLookupStatus = "Not Checked"
        ResolvedIPAddress = "N/A"
        ErrorMessage = "None"
    }

    # ---------- Ping the server ----------
    try {
        $pingResult = Test-Connection -ComputerName $server -Count 2 -Quiet
        if ($pingResult) {
            $result.PingStatus = "Success"
        } else {
            $result.PingStatus = "Failed"
        }
    } catch {
        $result.PingStatus = "Error"
        $result.ErrorMessage = "Ping Error: $($_.Exception.Message)"
    }

    # ---------- Perform nslookup on the server ----------
    try {
        $dnsResult = nslookup $server 2>&1  # Redirect errors to standard output
        $ipAddress = ($dnsResult | Select-String -Pattern 'Address: \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}').Matches.Value -replace 'Address:', '' | Select-Object -First 1
        
        if ($ipAddress) {
            $result.DNSLookupStatus = "Success"
            $result.ResolvedIPAddress = $ipAddress.Trim()
        } else {
            $result.DNSLookupStatus = "Failed"
        }
    } catch {
        $result.DNSLookupStatus = "Error"
        $result.ErrorMessage += " | DNS Lookup Error: $($_.Exception.Message)"
    }

    # Add the result for the current server to the results array
    $results += $result
}

# Display the results in a table
$results | Format-Table -AutoSize

# Export the results to a CSV file (optional)
$exportPath = "C:\temp\ServerPingDNSResults.csv"
$results | Export-Csv -Path $exportPath -NoTypeInformation

Write-Host "Results exported to: $exportPath"
