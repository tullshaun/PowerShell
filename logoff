# Ensure PowerShell remoting is enabled on the remote PC:
# Run this command on the remote PC:
# Enable-PSRemoting -Force

# Replace remotePCname with the remote PC's name or IP address.

# List user sessions on the remote PC
Invoke-Command -ComputerName remotePCname -ScriptBlock { query user }

# If you want to log off a specific session, find the session ID first with the above command,
# then use the following command to log off a specific session:
# Replace sessionID with the actual ID of the session you want to log off.
Invoke-Command -ComputerName remotePCname -ScriptBlock { logoff sessionID }

#find user in windows group
Get-ADGroupMember -Identity "can\admdba" | Select-Object Name, SamAccountName



##########psexec#################

REM Ensure PsExec is downloaded and available in your PATH.
REM Replace remotePCname with the remote PC's name or IP address.
REM Replace username and password with the appropriate credentials.

REM List user sessions on the remote PC
psexec \\remotePCname -u username -p password query user

REM If you want to log off a specific session, find the session ID first with the above command,
REM then use the following command to log off a specific session:
REM Replace sessionID with the actual ID of the session you want to log off.
psexec \\remotePCname -u username -p password logoff sessionID

########################################################################


psexec \\Computer1 -accepteula -d "powershell.exe -ExecutionPolicy Bypass -Command 'Get-EventLog -LogName System -Source Microsoft-Windows-Kernel-EventLog -InstanceId 6008 | Select-Object -ExpandProperty Message'"

####################################################################
$computernames = "Computer1", "Computer2", "Computer3"

foreach ($computer in $computernames) {
    Invoke-Command -ComputerName $computer -ScriptBlock {
        # Your remote commands here
        Write-Host "Running command on: $env:computername"
        # Example command: Get-Process | Select-Object ProcessName
    }
}



Lack of Communication Regarding Requirement for Edge:
We were not informed that constrained delegation was a requirement for Kerberos authentication in Edge. This lack of communication has resulted in us following the standard delegation approach that worked in Internet Explorer.

No Testing or Validation of This Configuration:
We have not yet tested constrained delegation in our environment to confirm if it resolves the authentication issue. Rolling out this change without thorough testing could introduce new issues.

Production Environment Considerations:
Our current environment is live, and the service accounts used do not currently rely on constrained delegation. Introducing this change in production without proper validation or a testing window presents significant risks to business continuity.

Potential Impact on Other Systems:
Implementing constrained delegation may have an impact on other systems or applications that rely on the same service accounts or authentication setup. Without fully understanding the scope of this impact, we could inadvertently disrupt access to other critical systems.

Change Control and Risk Management:
Introducing constrained delegation represents a significant configuration change that requires proper change control procedures. Before any such change, we need to ensure there is a rollback plan, monitoring in place, and sign-off from relevant stakeholders to avoid unnecessary downtime or user issues.

Lack of Guidance on How to Implement:
We have not received any detailed guidance or documentation on how to correctly implement constrained delegation in our environment for Edge. Without proper documentation, there's a risk of misconfiguration, which could cause further authentication failures.

Coordination with Security and IT Teams:
Changing to constrained delegation may require approval or input from security teams, given the sensitive nature of Kerberos authentication. Ensuring this change aligns with organizational security policies is important to avoid any violations or security risks.

Focus on a More Universal Solution:
Instead of implementing constrained delegation specifically for Edge, we are focusing on a more universal solution that works across browsers and platforms. This approach ensures consistency in authentication behavior and reduces the need for browser-specific configurations.
