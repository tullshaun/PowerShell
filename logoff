# Ensure PowerShell remoting is enabled on the remote PC:
# Run this command on the remote PC:
# Enable-PSRemoting -Force

# Replace remotePCname with the remote PC's name or IP address.

# List user sessions on the remote PC
Invoke-Command -ComputerName remotePCname -ScriptBlock { query user }

# If you want to log off a specific session, find the session ID first with the above command,
# then use the following command to log off a specific session:
# Replace sessionID with the actual ID of the session you want to log off.
Invoke-Command -ComputerName remotePCname -ScriptBlock { logoff sessionID }

#find user in windows group
Get-ADGroupMember -Identity "can\admdba" | Select-Object Name, SamAccountName



##########psexec#################

REM Ensure PsExec is downloaded and available in your PATH.
REM Replace remotePCname with the remote PC's name or IP address.
REM Replace username and password with the appropriate credentials.

REM List user sessions on the remote PC
psexec \\remotePCname -u username -p password query user

REM If you want to log off a specific session, find the session ID first with the above command,
REM then use the following command to log off a specific session:
REM Replace sessionID with the actual ID of the session you want to log off.
psexec \\remotePCname -u username -p password logoff sessionID

########################################################################


psexec \\Computer1 -accepteula -d "powershell.exe -ExecutionPolicy Bypass -Command 'Get-EventLog -LogName System -Source Microsoft-Windows-Kernel-EventLog -InstanceId 6008 | Select-Object -ExpandProperty Message'"

####################################################################
$computernames = "Computer1", "Computer2", "Computer3"

foreach ($computer in $computernames) {
    Invoke-Command -ComputerName $computer -ScriptBlock {
        # Your remote commands here
        Write-Host "Running command on: $env:computername"
        # Example command: Get-Process | Select-Object ProcessName
    }
}
