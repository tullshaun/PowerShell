Exit code 0: Up
Exit code 1: Warning
Exit code 2: Critical
Exit code 3: Unknown


# Minimal Reboot Pending Detection Script with Exit Codes

# Define Registry Keys to Check
$RebootRegKeys = @(
    "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\RebootPending",
    "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate\Auto Update\RebootRequired",
    "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\RebootInProgress",
    "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\PendingFileRenameOperations"
)

# Check for Pending Reboot
$PendingReboot = (
    ($RebootRegKeys | Where-Object { Test-Path $_ }) -or 
    (New-Object -ComObject Microsoft.Update.SystemInfo).RebootRequired
)

# Output Results in SolarWinds-Compatible Format
if ($PendingReboot) {
    Write-Host "Message.RebootStatus: Server is pending reboot"
    Write-Host "Statistic.RebootStatus: 1"
    exit 2 # Exit with Warning (2) status
} else {
    Write-Host "Message.RebootStatus: Server is not pending reboot"
    Write-Host "Statistic.RebootStatus: 0"
    exit 0 # Exit with Up (0) status
}




# Streamlined Script to Check Pending Reboot

# Define Registry Keys to Check
$RebootRegKey1 = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\RebootPending"
$RebootRegKey2 = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate\Auto Update\RebootRequired"
$RebootRegKey3 = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\RebootInProgress"

# Initialize Pending Reboot Flag
$PendingReboot = $false

# Check Registry Keys Individually and Combine Results
if ((Test-Path $RebootRegKey1) -or (Test-Path $RebootRegKey2) -or (Test-Path $RebootRegKey3)) {
    $PendingReboot = $true
}

# Output Results in SolarWinds-Compatible Format
if ($PendingReboot -eq $true) {
    Write-Host "Message.RebootStatus: Server is pending reboot."
    Write-Host "Statistic.RebootStatus: 1"
    exit 2 # Critical
} else {
    Write-Host "Message.RebootStatus: Server is not pending reboot."
    Write-Host "Statistic.RebootStatus: 0"
    exit 0 # Up
}









# Minimal Reboot Pending Detection Script

# Define Registry Keys to Check
$RebootRegKeys = @(
    "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\RebootPending",
    "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate\Auto Update\RebootRequired",
    "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\RebootInProgress",
    "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\PendingFileRenameOperations"
)

# Check for Pending Reboot
$PendingReboot = (
    ($RebootRegKeys | Where-Object { Test-Path $_ }) -or 
    (New-Object -ComObject Microsoft.Update.SystemInfo).RebootRequired
)

# Output Results in SolarWinds-Compatible Format
if ($PendingReboot) {
    Write-Host "Message.RebootStatus: Server is pending reboot"
    Write-Host "Statistic.RebootStatus: 1"
} else {
    Write-Host "Message.RebootStatus: Server is not pending reboot"
    Write-Host "Statistic.RebootStatus: 0"
}




# Streamlined Script to Check Pending Reboot



# Define Registry Keys to Check

$RebootRegKey1 = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\RebootPending"

$RebootRegKey2 = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate\Auto Update\RebootRequired"

$RebootRegKey3 = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\RebootInProgress"



# Initialize Pending Reboot Flag

$PendingReboot = $false



# Check Registry Keys Individually and Combine Results

if ((Test-Path $RebootRegKey1) -or (Test-Path $RebootRegKey2) -or (Test-Path $RebootRegKey3)) {

    $PendingReboot = $true

}



# Output Results in SolarWinds-Compatible Format

if ($PendingReboot -eq $true) {

    Write-Host "Message.RebootStatus: Server is pending reboot."

    Write-Host "Statistic.RebootStatus: 1"

} else {

    Write-Host "Message.RebootStatus: Server is not pending reboot."

    Write-Host "Statistic.RebootStatus: 0"

}


##########################################################################################################################################################################################################################
# Streamlined Script to Check Pending Reboot

# Define Registry Keys to Check

$RebootRegKey1 = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\RebootPending"

$RebootRegKey2 = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate\Auto Update\RebootRequired"

$RebootRegKey3 = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\RebootInProgress"



# Initialize Pending Reboot Flag

$PendingReboot = $false



# Check Registry Keys

if (Test-Path $RebootRegKey1 -or Test-Path $RebootRegKey2 -or Test-Path $RebootRegKey3) {

    $PendingReboot = $true

}



# Output Results in SolarWinds-Compatible Format

if ($PendingReboot -eq $true) {

    Write-Host "Message.RebootStatus: Server is pending reboot."

    Write-Host "Statistic.RebootStatus: 1"

} else {

    Write-Host "Message.RebootStatus: Server is not pending reboot."

    Write-Host "Statistic.RebootStatus: 0"

}





$PendingReboot = Get-WmiObject -Namespace "ROOT\CCM\ClientSDK" -Class CCM_ClientUtilities | Select-Object IsRebootPending
if ($PendingReboot.IsRebootPending -eq $true) {
    Write-Host "Message: Server is pending reboot."
    Write-Host "Statistic: 1"
} else {
    Write-Host "Message: Server is not pending reboot."
    Write-Host "Statistic: 0"
}
